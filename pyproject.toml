[project]
name = "readme-mentor"
version = "0.1.1"
description = "AI-powered README generation and mentoring tool"
authors = [
    {name = "Aditya Gambhir",email = "67105262+Aditya-gam@users.noreply.github.com"}
]
readme = "README.md"
requires-python = ">=3.11,<4.0"
dependencies = [
    "fastapi>=0.116.1",
    "uvicorn[standard]>=0.35.0",
    "pydantic>=2.5.0",
    "python-dotenv>=1.0.0",
    "httpx>=0.25.0",
    "jinja2>=3.1.0",
    "langchain (>=0.3.26,<0.4.0)",
    "chromadb (>=1.0.15,<2.0.0)",
    "sentence-transformers (>=5.0.0,<6.0.0)",
    "streamlit (>=1.47.0,<2.0.0)",
    "pygithub (>=2.6.1,<3.0.0)",
]

[tool.poetry]
packages = [
    {include = "app"},
]

[tool.poetry.group.dev.dependencies]
pytest = "^8.4.1"
pytest-asyncio = "^1.1.0"
ruff = "^0.12.4"
pre-commit = "^4.2.0"
pytest-cov = "^6.2.1"
sphinx = "^8.2.3"
sphinx-rtd-theme = "^3.0.2"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

# Ruff configuration moved to ruff.toml
# See ruff.toml for configuration details

# Black configuration removed - using Ruff for formatting
# See ruff.toml for formatting configuration

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "integration: marks tests as integration tests (deselect with '-m \"not integration\"')",
]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-report=html:cache/htmlcov",
    "--cov-report=xml:cache/coverage.xml",
]
cache_dir = "cache/.pytest_cache"

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]
data_file = "cache/.coverage"

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# MyPy configuration removed - using Ruff for type checking
# Type hints will be enforced through Ruff rules
